import { interfaces } from 'inversify';
import type { Controller, ControllerMetadata, ControllerMethodMetadata, ControllerParameterMetadata, DecoratorTarget, IHttpActionResult, Middleware } from './interfaces';
export declare function getControllersFromContainer(container: interfaces.Container, forceControllers: boolean): Controller[];
export declare function getControllersFromMetadata(): DecoratorTarget[];
export declare function getMiddlewareMetadata(constructor: DecoratorTarget, key: string): Middleware[];
export declare function getControllerMetadata(constructor: NewableFunction): ControllerMetadata;
export declare function getControllerMethodMetadata(constructor: NewableFunction): ControllerMethodMetadata[];
export declare function getControllerParameterMetadata(constructor: NewableFunction): ControllerParameterMetadata;
export declare function cleanUpMetadata(): void;
export declare function instanceOfIHttpActionResult(value: unknown): value is IHttpActionResult;
export declare function getOrCreateMetadata<T>(key: string, target: object, defaultValue: T): T;
